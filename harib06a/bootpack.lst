     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_keyboard
    14 00000000                                 	EXTERN	_enable_mouse
    15 00000000                                 	EXTERN	_memtest
    16 00000000                                 	EXTERN	_memman_init
    17 00000000                                 	EXTERN	_memman_free
    18 00000000                                 	EXTERN	_init_palette
    19 00000000                                 	EXTERN	_shtctl_init
    20 00000000                                 	EXTERN	_sheet_alloc
    21 00000000                                 	EXTERN	_memman_alloc_4k
    22 00000000                                 	EXTERN	_sheet_setbuf
    23 00000000                                 	EXTERN	_init_screen8
    24 00000000                                 	EXTERN	_init_mouse_cursor8
    25 00000000                                 	EXTERN	_sheet_slide
    26 00000000                                 	EXTERN	_sheet_updown
    27 00000000                                 	EXTERN	_sprintf
    28 00000000                                 	EXTERN	_putfonts8_asc
    29 00000000                                 	EXTERN	_memman_total
    30 00000000                                 	EXTERN	_sheet_refresh
    31 00000000                                 	EXTERN	_io_cli
    32 00000000                                 	EXTERN	_fifo8_status
    33 00000000                                 	EXTERN	_fifo8_get
    34 00000000                                 	EXTERN	_mouse_decode
    35 00000000                                 	EXTERN	_boxfill8
    36 00000000                                 	EXTERN	_io_stihlt
    37 00000000                                 [FILE "bootpack.c"]
    38                                          [SECTION .data]
    39 00000000                                 LC0:
    40 00000000 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       0000000A 00 
    41 0000000B                                 LC1:
    42 0000000B 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB free: %dKB",0x00
       00000015 42 20 66 72 65 65 3A 20 25 64 
       0000001F 4B 42 00 
    43 00000022                                 LC3:
    44 00000022 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000002C 34 64 5D 00 
    45 00000030                                 LC2:
    46 00000030 25 30 32 58 00                  	DB	"%02X",0x00
    47                                          [SECTION .text]
    48 00000000                                 	GLOBAL	_HariMain
    49 00000000                                 _HariMain:
    50 00000000 55                              	PUSH	EBP
    51 00000001 89 E5                           	MOV	EBP,ESP
    52 00000003 57                              	PUSH	EDI
    53 00000004 56                              	PUSH	ESI
    54 00000005 53                              	PUSH	EBX
    55 00000006 81 EC 000001F8                  	SUB	ESP,504
    56 0000000C E8 [00000000]                   	CALL	_init_gdtidt
    57 00000011 E8 [00000000]                   	CALL	_init_pic
    58 00000016 E8 [00000000]                   	CALL	_io_sti
    59 0000001B 8D 45 A4                        	LEA	EAX,DWORD [-92+EBP]
    60 0000001E 50                              	PUSH	EAX
    61 0000001F 6A 20                           	PUSH	32
    62 00000021 68 [00000000]                   	PUSH	_keyfifo
    63 00000026 E8 [00000000]                   	CALL	_fifo8_init
    64 0000002B 8D 85 FFFFFF24                  	LEA	EAX,DWORD [-220+EBP]
    65 00000031 50                              	PUSH	EAX
    66 00000032 68 00000080                     	PUSH	128
    67 00000037 68 [00000000]                   	PUSH	_mousefifo
    68 0000003C E8 [00000000]                   	CALL	_fifo8_init
    69 00000041 68 000000F9                     	PUSH	249
    70 00000046 6A 21                           	PUSH	33
    71 00000048 E8 [00000000]                   	CALL	_io_out8
    72 0000004D 83 C4 20                        	ADD	ESP,32
    73 00000050 68 000000EF                     	PUSH	239
    74 00000055 68 000000A1                     	PUSH	161
    75 0000005A E8 [00000000]                   	CALL	_io_out8
    76 0000005F E8 [00000000]                   	CALL	_init_keyboard
    77 00000064 8D 85 FFFFFF14                  	LEA	EAX,DWORD [-236+EBP]
    78 0000006A 50                              	PUSH	EAX
    79 0000006B E8 [00000000]                   	CALL	_enable_mouse
    80 00000070 68 BFFFFFFF                     	PUSH	-1073741825
    81 00000075 68 00400000                     	PUSH	4194304
    82 0000007A E8 [00000000]                   	CALL	_memtest
    83 0000007F 68 0003C000                     	PUSH	245760
    84 00000084 89 C3                           	MOV	EBX,EAX
    85 00000086 E8 [00000000]                   	CALL	_memman_init
    86 0000008B 68 0009E000                     	PUSH	647168
    87 00000090 68 00001000                     	PUSH	4096
    88 00000095 68 0003C000                     	PUSH	245760
    89 0000009A E8 [00000000]                   	CALL	_memman_free
    90 0000009F 8D 83 FFC00000                  	LEA	EAX,DWORD [-4194304+EBX]
    91 000000A5 83 C4 24                        	ADD	ESP,36
    92 000000A8 8D 9D FFFFFE14                  	LEA	EBX,DWORD [-492+EBP]
    93 000000AE 50                              	PUSH	EAX
    94 000000AF 68 00400000                     	PUSH	4194304
    95 000000B4 68 0003C000                     	PUSH	245760
    96 000000B9 E8 [00000000]                   	CALL	_memman_free
    97 000000BE E8 [00000000]                   	CALL	_init_palette
    98 000000C3 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    99 000000CA 50                              	PUSH	EAX
   100 000000CB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   101 000000D2 50                              	PUSH	EAX
   102 000000D3 FF 35 00000FF8                  	PUSH	DWORD [4088]
   103 000000D9 68 0003C000                     	PUSH	245760
   104 000000DE E8 [00000000]                   	CALL	_shtctl_init
   105 000000E3 50                              	PUSH	EAX
   106 000000E4 89 85 FFFFFE0C                  	MOV	DWORD [-500+EBP],EAX
   107 000000EA E8 [00000000]                   	CALL	_sheet_alloc
   108 000000EF 83 C4 20                        	ADD	ESP,32
   109 000000F2 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   110 000000F8 89 C6                           	MOV	ESI,EAX
   111 000000FA E8 [00000000]                   	CALL	_sheet_alloc
   112 000000FF 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   113 00000106 89 85 FFFFFE08                  	MOV	DWORD [-504+EBP],EAX
   114 0000010C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   115 00000113 0F AF C2                        	IMUL	EAX,EDX
   116 00000116 50                              	PUSH	EAX
   117 00000117 68 0003C000                     	PUSH	245760
   118 0000011C E8 [00000000]                   	CALL	_memman_alloc_4k
   119 00000121 6A FF                           	PUSH	-1
   120 00000123 89 85 FFFFFE04                  	MOV	DWORD [-508+EBP],EAX
   121 00000129 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   122 00000130 50                              	PUSH	EAX
   123 00000131 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   124 00000138 50                              	PUSH	EAX
   125 00000139 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   126 0000013F 56                              	PUSH	ESI
   127 00000140 E8 [00000000]                   	CALL	_sheet_setbuf
   128 00000145 83 C4 20                        	ADD	ESP,32
   129 00000148 6A 63                           	PUSH	99
   130 0000014A 6A 10                           	PUSH	16
   131 0000014C 6A 10                           	PUSH	16
   132 0000014E 53                              	PUSH	EBX
   133 0000014F FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   134 00000155 E8 [00000000]                   	CALL	_sheet_setbuf
   135 0000015A 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   136 00000161 50                              	PUSH	EAX
   137 00000162 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   138 00000169 50                              	PUSH	EAX
   139 0000016A FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   140 00000170 E8 [00000000]                   	CALL	_init_screen8
   141 00000175 83 C4 20                        	ADD	ESP,32
   142 00000178 6A 63                           	PUSH	99
   143 0000017A 53                              	PUSH	EBX
   144 0000017B BB 00000002                     	MOV	EBX,2
   145 00000180 E8 [00000000]                   	CALL	_init_mouse_cursor8
   146 00000185 6A 00                           	PUSH	0
   147 00000187 6A 00                           	PUSH	0
   148 00000189 56                              	PUSH	ESI
   149 0000018A FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   150 00000190 E8 [00000000]                   	CALL	_sheet_slide
   151 00000195 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   152 0000019C 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   153 0000019F 89 C8                           	MOV	EAX,ECX
   154 000001A1 99                              	CDQ
   155 000001A2 F7 FB                           	IDIV	EBX
   156 000001A4 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
   157 000001AA 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   158 000001B1 6A 00                           	PUSH	0
   159 000001B3 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
   160 000001B6 56                              	PUSH	ESI
   161 000001B7 89 C8                           	MOV	EAX,ECX
   162 000001B9 99                              	CDQ
   163 000001BA F7 FB                           	IDIV	EBX
   164 000001BC FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   165 000001C2 89 C7                           	MOV	EDI,EAX
   166 000001C4 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   167 000001C7 E8 [00000000]                   	CALL	_sheet_updown
   168 000001CC 83 C4 24                        	ADD	ESP,36
   169 000001CF 6A 01                           	PUSH	1
   170 000001D1 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   171 000001D7 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   172 000001DD E8 [00000000]                   	CALL	_sheet_updown
   173 000001E2 57                              	PUSH	EDI
   174 000001E3 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   175 000001E9 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   176 000001EF FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   177 000001F5 E8 [00000000]                   	CALL	_sheet_slide
   178 000001FA 57                              	PUSH	EDI
   179 000001FB FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   180 00000201 68 [00000000]                   	PUSH	LC0
   181 00000206 53                              	PUSH	EBX
   182 00000207 E8 [00000000]                   	CALL	_sprintf
   183 0000020C 83 C4 2C                        	ADD	ESP,44
   184 0000020F 53                              	PUSH	EBX
   185 00000210 6A 07                           	PUSH	7
   186 00000212 6A 00                           	PUSH	0
   187 00000214 6A 00                           	PUSH	0
   188 00000216 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   189 0000021D 50                              	PUSH	EAX
   190 0000021E FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   191 00000224 E8 [00000000]                   	CALL	_putfonts8_asc
   192 00000229 68 0003C000                     	PUSH	245760
   193 0000022E E8 [00000000]                   	CALL	_memman_total
   194 00000233 C1 E8 0A                        	SHR	EAX,10
   195 00000236 89 04 24                        	MOV	DWORD [ESP],EAX
   196 00000239 68 0003C000                     	PUSH	245760
   197 0000023E E8 [00000000]                   	CALL	_memman_total
   198 00000243 C1 E8 14                        	SHR	EAX,20
   199 00000246 89 04 24                        	MOV	DWORD [ESP],EAX
   200 00000249 68 [0000000B]                   	PUSH	LC1
   201 0000024E 53                              	PUSH	EBX
   202 0000024F E8 [00000000]                   	CALL	_sprintf
   203 00000254 83 C4 28                        	ADD	ESP,40
   204 00000257 53                              	PUSH	EBX
   205 00000258 6A 07                           	PUSH	7
   206 0000025A 6A 20                           	PUSH	32
   207 0000025C                                 L18:
   208 0000025C 6A 00                           	PUSH	0
   209 0000025E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   210 00000265 50                              	PUSH	EAX
   211 00000266 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   212 0000026C E8 [00000000]                   	CALL	_putfonts8_asc
   213 00000271 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   214 00000277 E8 [00000000]                   	CALL	_sheet_refresh
   215 0000027C 83 C4 1C                        	ADD	ESP,28
   216 0000027F                                 L2:
   217 0000027F E8 [00000000]                   	CALL	_io_cli
   218 00000284 68 [00000000]                   	PUSH	_keyfifo
   219 00000289 E8 [00000000]                   	CALL	_fifo8_status
   220 0000028E 68 [00000000]                   	PUSH	_mousefifo
   221 00000293 89 C3                           	MOV	EBX,EAX
   222 00000295 E8 [00000000]                   	CALL	_fifo8_status
   223 0000029A 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   224 0000029D 5B                              	POP	EBX
   225 0000029E 5E                              	POP	ESI
   226 0000029F 85 C0                           	TEST	EAX,EAX
   227 000002A1 0F 84 000001DD                  	JE	L19
   228 000002A7 68 [00000000]                   	PUSH	_keyfifo
   229 000002AC E8 [00000000]                   	CALL	_fifo8_status
   230 000002B1 59                              	POP	ECX
   231 000002B2 85 C0                           	TEST	EAX,EAX
   232 000002B4 0F 85 00000180                  	JNE	L20
   233 000002BA 68 [00000000]                   	PUSH	_mousefifo
   234 000002BF E8 [00000000]                   	CALL	_fifo8_status
   235 000002C4 5A                              	POP	EDX
   236 000002C5 85 C0                           	TEST	EAX,EAX
   237 000002C7 74 B6                           	JE	L2
   238 000002C9 68 [00000000]                   	PUSH	_mousefifo
   239 000002CE E8 [00000000]                   	CALL	_fifo8_get
   240 000002D3 89 C3                           	MOV	EBX,EAX
   241 000002D5 E8 [00000000]                   	CALL	_io_sti
   242 000002DA 0F B6 C3                        	MOVZX	EAX,BL
   243 000002DD 50                              	PUSH	EAX
   244 000002DE 8D 85 FFFFFF14                  	LEA	EAX,DWORD [-236+EBP]
   245 000002E4 50                              	PUSH	EAX
   246 000002E5 E8 [00000000]                   	CALL	_mouse_decode
   247 000002EA 83 C4 0C                        	ADD	ESP,12
   248 000002ED 85 C0                           	TEST	EAX,EAX
   249 000002EF 74 8E                           	JE	L2
   250 000002F1 FF B5 FFFFFF1C                  	PUSH	DWORD [-228+EBP]
   251 000002F7 FF B5 FFFFFF18                  	PUSH	DWORD [-232+EBP]
   252 000002FD 68 [00000022]                   	PUSH	LC3
   253 00000302 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   254 00000305 53                              	PUSH	EBX
   255 00000306 E8 [00000000]                   	CALL	_sprintf
   256 0000030B 83 C4 10                        	ADD	ESP,16
   257 0000030E 8B 85 FFFFFF20                  	MOV	EAX,DWORD [-224+EBP]
   258 00000314 A9 00000001                     	TEST	EAX,1
   259 00000319 74 04                           	JE	L11
   260 0000031B C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   261 0000031F                                 L11:
   262 0000031F A9 00000002                     	TEST	EAX,2
   263 00000324 74 04                           	JE	L12
   264 00000326 C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   265 0000032A                                 L12:
   266 0000032A 83 E0 04                        	AND	EAX,4
   267 0000032D 74 04                           	JE	L13
   268 0000032F C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   269 00000333                                 L13:
   270 00000333 6A 1F                           	PUSH	31
   271 00000335 68 00000097                     	PUSH	151
   272 0000033A 6A 10                           	PUSH	16
   273 0000033C 6A 20                           	PUSH	32
   274 0000033E 6A 0E                           	PUSH	14
   275 00000340 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   276 00000347 50                              	PUSH	EAX
   277 00000348 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   278 0000034E E8 [00000000]                   	CALL	_boxfill8
   279 00000353 53                              	PUSH	EBX
   280 00000354 6A 07                           	PUSH	7
   281 00000356 6A 10                           	PUSH	16
   282 00000358 6A 20                           	PUSH	32
   283 0000035A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   284 00000361 50                              	PUSH	EAX
   285 00000362 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   286 00000368 E8 [00000000]                   	CALL	_putfonts8_asc
   287 0000036D 8B 85 FFFFFF18                  	MOV	EAX,DWORD [-232+EBP]
   288 00000373 03 BD FFFFFF1C                  	ADD	EDI,DWORD [-228+EBP]
   289 00000379 83 C4 34                        	ADD	ESP,52
   290 0000037C 01 85 FFFFFE10                  	ADD	DWORD [-496+EBP],EAX
   291 00000382 0F 88 000000A3                  	JS	L21
   292 00000388                                 L14:
   293 00000388 85 FF                           	TEST	EDI,EDI
   294 0000038A 0F 88 00000094                  	JS	L22
   295 00000390                                 L15:
   296 00000390 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   297 00000397 83 E8 10                        	SUB	EAX,16
   298 0000039A 39 85 FFFFFE10                  	CMP	DWORD [-496+EBP],EAX
   299 000003A0 7E 06                           	JLE	L16
   300 000003A2 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
   301 000003A8                                 L16:
   302 000003A8 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   303 000003AF 83 E8 10                        	SUB	EAX,16
   304 000003B2 39 C7                           	CMP	EDI,EAX
   305 000003B4 7E 02                           	JLE	L17
   306 000003B6 89 C7                           	MOV	EDI,EAX
   307 000003B8                                 L17:
   308 000003B8 57                              	PUSH	EDI
   309 000003B9 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   310 000003BF 68 [00000000]                   	PUSH	LC0
   311 000003C4 53                              	PUSH	EBX
   312 000003C5 E8 [00000000]                   	CALL	_sprintf
   313 000003CA 6A 0F                           	PUSH	15
   314 000003CC 6A 4F                           	PUSH	79
   315 000003CE 6A 00                           	PUSH	0
   316 000003D0 6A 00                           	PUSH	0
   317 000003D2 6A 0E                           	PUSH	14
   318 000003D4 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   319 000003DB 50                              	PUSH	EAX
   320 000003DC FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   321 000003E2 E8 [00000000]                   	CALL	_boxfill8
   322 000003E7 83 C4 2C                        	ADD	ESP,44
   323 000003EA 53                              	PUSH	EBX
   324 000003EB 6A 07                           	PUSH	7
   325 000003ED 6A 00                           	PUSH	0
   326 000003EF 6A 00                           	PUSH	0
   327 000003F1 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   328 000003F8 50                              	PUSH	EAX
   329 000003F9 FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   330 000003FF E8 [00000000]                   	CALL	_putfonts8_asc
   331 00000404 57                              	PUSH	EDI
   332 00000405 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
   333 0000040B FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   334 00000411 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   335 00000417 E8 [00000000]                   	CALL	_sheet_slide
   336 0000041C 83 C4 28                        	ADD	ESP,40
   337 0000041F E9 FFFFFE5B                     	JMP	L2
   338 00000424                                 L22:
   339 00000424 31 FF                           	XOR	EDI,EDI
   340 00000426 E9 FFFFFF65                     	JMP	L15
   341 0000042B                                 L21:
   342 0000042B C7 85 FFFFFE10 00000000         	MOV	DWORD [-496+EBP],0
   343 00000435 E9 FFFFFF4E                     	JMP	L14
   344 0000043A                                 L20:
   345 0000043A 68 [00000000]                   	PUSH	_keyfifo
   346 0000043F E8 [00000000]                   	CALL	_fifo8_get
   347 00000444 89 C3                           	MOV	EBX,EAX
   348 00000446 E8 [00000000]                   	CALL	_io_sti
   349 0000044B 53                              	PUSH	EBX
   350 0000044C 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   351 0000044F 68 [00000030]                   	PUSH	LC2
   352 00000454 53                              	PUSH	EBX
   353 00000455 E8 [00000000]                   	CALL	_sprintf
   354 0000045A 6A 1F                           	PUSH	31
   355 0000045C 6A 0F                           	PUSH	15
   356 0000045E 6A 10                           	PUSH	16
   357 00000460 6A 00                           	PUSH	0
   358 00000462 6A 0E                           	PUSH	14
   359 00000464 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   360 0000046B 50                              	PUSH	EAX
   361 0000046C FF B5 FFFFFE04                  	PUSH	DWORD [-508+EBP]
   362 00000472 E8 [00000000]                   	CALL	_boxfill8
   363 00000477 83 C4 2C                        	ADD	ESP,44
   364 0000047A 53                              	PUSH	EBX
   365 0000047B 6A 07                           	PUSH	7
   366 0000047D 6A 10                           	PUSH	16
   367 0000047F E9 FFFFFDD8                     	JMP	L18
   368 00000484                                 L19:
   369 00000484 E8 [00000000]                   	CALL	_io_stihlt
   370 00000489 E9 FFFFFDF1                     	JMP	L2
